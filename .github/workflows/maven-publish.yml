# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - master

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 14 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -B clean compile --file pom.xml

  windows:
    runs-on: windows-latest
    needs: compile
    name: Test and build Windows version
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean install --file pom.xml

    - name: Build main-ui with jlink
      run: mvn -B javafx:jlink --file main-ui/pom.xml

    - name: Package as msi
      run: jpackage --name HappyMusic --type msi --runtime-image main-ui/target/happy --module cloud.happydev.music.ui/cloud.happydev.music.ui.App --win-dir-chooser

    - name: Upload installer
      uses: actions/upload-artifact@v2
      with:
        path: HappyMusic-1.0.msi

  osx:
    runs-on: macos-latest
    needs: compile
    name: Test and build OSX version

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml

      - name: Build main-ui with jlink
        run: mvn -B javafx:jlink --file main-ui/pom.xml

      - name: Package as dmg
        run: jpackage --name HappyMusic --runtime-image main-ui/target/happy --module cloud.happydev.music.ui/cloud.happydev.music.ui.App

      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          path: HappyMusic-1.0.dmg
