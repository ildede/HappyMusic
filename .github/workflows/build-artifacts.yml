name: Build artifacts

on:
  push:
    branches:
      - release

jobs:
  windows:
    runs-on: windows-latest
    name: Test and build Windows version

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean install --file pom.xml

    - name: Build main-ui with jlink
      run: mvn -B javafx:jlink --file main-ui/pom.xml

    - name: Package as msi
      run: jpackage --name HappyMusic --type msi --runtime-image main-ui/target/happy --module cloud.happydev.music.ui/cloud.happydev.music.ui.App --win-dir-chooser

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: win-${{ github.ref }}
        release_name: Release win-${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./HappyMusic-1.0.msi
        asset_name: HappyMusic-${{ github.ref }}.msi

  osx:
    runs-on: macos-latest
    name: Test and build MacOS version

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml

      - name: Build main-ui with jlink
        run: mvn -B javafx:jlink --file main-ui/pom.xml

      - name: Package as dmg
        run: jpackage --name HappyMusic --runtime-image main-ui/target/happy --module cloud.happydev.music.ui/cloud.happydev.music.ui.App

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: osx-${{ github.ref }}
          release_name: Release osx-${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./HappyMusic-1.0.dmg
          asset_name: HappyMusic-${{ github.ref }}.dmg
